void free(void* virtual_address) {
	/*//TODO: [PROJECT 2023 - MS2 - [2] User Heap] free() [User Side]
	// Write your code here, remove the panic and write your code
	panic("free() is not implemented yet...!!");

	//you should get the size of the given allocation using its address
	//you need to call sys_freeMem()
	//refer to the project presentation and documentation for details*/


	int size=0;
	int n=((USER_HEAP_MAX-USER_HEAP_START))/PAGE_SIZE;
	int stor_size=((USER_HEAP_MAX-USER_HEAP_START))/PAGE_SIZE;

	int indx_to_free=0;

//    ~~~~~~~~~~~~~~~~~~~ Get indx of VA to check ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	for (int i=0;i<n;i++)
	{

		if((uint32)virtual_address==adds[i]){
			indx_to_free=i;
		}

	}
	for(int i=0;i<n;i++){
		if(stor[i].adds==(uint32)virtual_address){
					size=stor[i].size;
				}
	}


	size = ROUNDUP(size , PAGE_SIZE) ;
	int num_pages = size / PAGE_SIZE ;

// ~~~~~~~~~~~~~~~~~~~~~~ free filled pages ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if(filled_spaces[indx_to_free]==1){

		for(int z=0;z<num_pages;z++){

			filled_spaces[indx_to_free]=0;
			indx_to_free++;
		}

	}


	cprintf("############### %x \n",size );
	sys_freeMem((uint32)virtual_address,size);

}